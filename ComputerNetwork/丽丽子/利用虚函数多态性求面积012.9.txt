#include<iostream.h>
using namespace std;
class geometric_shape//基类，几何图形
{
protected:
	float x;
	float y;
	float z;
public:
	figure(float i,float j,float z=0)
	{ x=a;y=b;z=c}
	virtual void show_area()=0;
};


class circle//圆类
{
public:
	circle(float a,float b,float c)
	{
		x=a;y=b;z=c
	};
	circle(){};
private:
	float a,b;
	float c;
public:
	void showM(){
		cout<<"圆面积"<<2*3.1415926*c*c<<endl;
		cout<<"圆周长"<<2*3.1415926*c<<endl;
	};
};

class cylinder:public circle//圆柱
{
public:
	cylinder(){};
private:
	int height;
public:
	void showV()
	{
		cout<<"圆柱体体积"<<2*3.1415926*c*c*height<<endl;
		cout<<"圆柱体表面积"<<2*2*3.1415926*c+2*3.1415926*c*height<<endl;
	};
};

class cone:public circle//圆锥
{
public:
	cone(){};
private:
	int height;
public:
	void showV(){
		cout<<"圆锥体积"<<1/3*2*3.1415926*c*c*height<<endl;
		//cout<<"圆锥表面积"<<
	};
};

class rectangle:public geometric_shape//矩形类
{
public:
	rectangle(float a,float b,float c)
	{
		x=a;y=b;z=c
	};
    rectangle(){};
	private:
	float a,b;
	float c;

	void show_area()
	{ 
		cout<<"矩形面积"<<a*b<<endl;
		cout<<"矩形周长"<<2a+2b<<endl;
	}
};

class box:public rectangle//长方体
{
public:
	box(){};
private:
	int height;
public:
	void showV(){
		cout<<"长方体体积"<<a*b*height<<endl;
		cout<<"长方体表面积"<<2a*height+2b*height+2ab<<endl;
	};
};

class triangle:public geometric_shape//三角形类
{
public:
	triangle(float a,float b,float c)
	{
		x=a;y=b;z=c
	};
    triangle(){};
	private:
	float a,b;
	float c;
	float h;

	void show_area()
	{ 
		cout<<"三角形面积"<<1/2*c*h<<endl;
		cout<<"三角形周长"<<a+b+c<<endl;
	}
};

class t_pymarid:public triangle//三棱锥
{
public:
	 t_pymarid(){};
private:
	int height;
public:
	void showV(){
		cout<<"三棱锥体积"<<1/3*1/2*c*h*height<<endl;
		//cout<<"三棱锥表面积"<<<<endl;
	};
};

class t_prism:public triangle//三棱柱
{
public:
	 t_prism(){};
private:
	int height;
public:
	void showV(){
		cout<<"三棱柱体积"<<1/2*c*h*height<<endl;
		cout<<"三棱柱表面积"<<c*h+3c*height<<endl;
	};
};

void main()
{	
	figure *p;
	triangle t(3,4,5);
	rectangle s(4,7,8);
	circle c(3,6,7);
	p=&t;
	p->show_area();
	p=&s;
	p->show_area();
	p=&c;
	p->show_area();
}